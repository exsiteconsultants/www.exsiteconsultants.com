{"version":3,"sources":["_conditionals.scss","_fonts.scss","_footer.scss","_vars.scss","_css3.scss","_header.scss","_meta.scss","_page.scss","_shims.scss","_thumbnails.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["// Media query helpers. These make producing IE layouts\n// super easy.\n\n// The base css you write should be for mobile. You can\n// then add desktop styles on top.\n//\n// Usage:\n//\n//   div.columns {\n//     border: 1px solid;\n//\n//     @include media(desktop){\n//       width: 30%;\n//       float: left;\n//     }\n//     @include ie-lte(8) {\n//       something to fix visual bugs in old IE\n//     }\n//     @include ie(6) {\n//       padding: 0;\n//     }\n//   }\n\n\n$is-ie: false !default;\n$mobile-ie6: true !default;\n\n@-ms-viewport {\n  width: device-width;\n}\n\n@-o-viewport {\n  width: device-width;\n}\n\n@mixin media($size: false, $max-width: false, $min-width: false, $ignore-for-ie: false) {\n  @if $is-ie and ($ignore-for-ie == false) {\n    @if $size != mobile {\n      @if ($ie-version == 6 and $mobile-ie6 == false) or $ie-version > 6 {\n        @content;\n      }\n    }\n  } @else {\n    @if $size == desktopxl {\n      @media (min-width: 968px){\n        @content;\n      }\n  } @else if $size == desktop {\n      @media (min-width: 769px){\n        @content;\n      }\n    } @else if $size == tablet {\n      @media (min-width: 641px){\n        @content;\n      }\n    } @else if $size == mobile {\n      @media (max-width: 640px){\n        @content;\n      }\n    } @else if $max-width != false {\n      @media (max-width: $max-width){\n        @content;\n      }\n    } @else if $min-width != false {\n      @media (min-width: $min-width){\n        @content;\n      }\n    } @else {\n      @media (min-width: $size){\n        @content\n      }\n    }\n  }\n}\n\n@mixin ie-lte($version) {\n  @if $is-ie {\n    @if $ie-version <= $version {\n      @content;\n    }\n  }\n}\n@mixin ie($version) {\n  @if $is-ie {\n    @if $ie-version == $version {\n      @content;\n    }\n  }\n}\n","@import \"conditionals\";\n@import \"vars\";\n\n@font-face {\n    font-family: 'LibreBaskervilleRegular';\n    src: url(\"/fonts/LibreBaskerville-Regular-webfont.eot\");\n    src: url(\"/fonts/LibreBaskerville-Regular-webfont.eot?#iefix\") format(\"embedded-opentype\"), url(\"/fonts/LibreBaskerville-Regular-webfont.woff\") format(\"woff\"), url(\"/fonts/LibreBaskerville-Regular-webfont.ttf\") format(\"truetype\"), url(\"/fonts/LibreBaskerville-Regular-webfont.svg#LibreBaskervilleRegular\") format(\"svg\");\n    font-weight: normal;\n    font-style: normal\n}\n@font-face {\n    font-family: 'LibreBaskervilleItalic';\n    src: url(\"/fonts/LibreBaskerville-Italic-webfont.eot\");\n    src: url(\"/fonts/LibreBaskerville-Italic-webfont.eot?#iefix\") format(\"embedded-opentype\"), url(\"/fonts/LibreBaskerville-Italic-webfont.woff\") format(\"woff\"), url(\"/fonts/LibreBaskerville-Italic-webfont.ttf\") format(\"truetype\"), url(\"/fonts/LibreBaskerville-Italic-webfont.svg#LibreBaskervilleItalic\") format(\"svg\");\n    font-weight: normal;\n    font-style: normal\n}\n@font-face {\n    font-family: 'LibreBaskervilleBold';\n    src: url(\"/fonts/LibreBaskerville-Bold-webfont.eot\");\n    src: url(\"/fonts/LibreBaskerville-Bold-webfont.eot?#iefix\") format(\"embedded-opentype\"), url(\"/fonts/LibreBaskerville-Bold-webfont.woff\") format(\"woff\"), url(\"/fonts/LibreBaskerville-Bold-webfont.ttf\") format(\"truetype\"), url(\"/fonts/LibreBaskerville-Bold-webfont.svg#LibreBaskervilleBold\") format(\"svg\");\n    font-weight: normal;\n    font-style: normal\n}\n\n@mixin title-big() {\n    font-family: Baskerville, 'LibreBaskervilleRegular', serif;\n    font-weight: normal;\n    font-size: 30px;\n    line-height: 1;\n}\n\n@mixin title-small() {\n    font-family: Baskerville, 'LibreBaskervilleRegular', serif;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 24px;\n}\n@mixin title-xsmall() {\n    font-family: Baskerville, 'LibreBaskervilleRegular', serif;\n    font-weight: normal;\n    font-size: 18px;\n    line-height: 1;\n}\n\n@mixin heading-large() {\n  font-family: arial, helvetica, sans-serif;\n  font-weight: 400;\n  font-size: 22px;\n  line-height: 2;\n\n  @include media(tablet) {\n    font-size: 26px;\n    margin-bottom: $gutter * 1.5;\n  }\n\n  @include media(desktop) {\n    font-size: 30px;\n  }\n}\n\n@mixin text-medium() {\n    font-family: arial, helvetica, sans-serif;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 1.4;\n\n\n    @include media(desktop) {\n      font-size: 19px;\n    }\n}\n\n@mixin text-small() {\n    font-family: arial, helvetica, sans-serif;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 1.2;\n\n    @include media(tablet) {\n      font-size: 16px;\n    }\n\n    @include media(desktop) {\n      font-size: 18px;\n    }\n}\n\n.heading-large {\n  @include heading-large;\n  margin-top: 0;\n}\n","@import \"vars\";\n\nfooter {\n  clear:both;\n  border-top: 1px solid $darkgrey;\n  background: $headbg;\n\n  nav {\n      @extend %contain-floats;\n      @include box-sizing(border-box);\n      padding-bottom: $mobilegutter;\n\n      .nav-item {\n          @include box-sizing(border-box);\n          @include text-medium();\n          padding: $mobilegutter;\n          width: 100%;\n          display: inline-block;\n\n          @include media(tablet) {\n              padding: $gutter;\n              padding-bottom: $gutter * 2;\n              width: 25%;\n          }\n      }\n\n      .arrow {\n          display: none;\n          @include media(tablet) {\n              display: inline;\n          }\n      }\n\n      #previous-link {\n          text-align: center;\n          @include media(tablet) {\n              float: left;\n              text-align: left;\n          }\n      }\n\n      #next-link {\n          text-align: center;\n          @include media(tablet) {\n              float: right;\n              text-align: right;\n          }\n      }\n\n      #top-link {\n          text-align: center;\n          @include media(tablet) {\n              float: left;\n              margin: 0 auto;\n              text-align: center;\n          }\n      }\n\n  }\n\n}\n","$black: #000;\n$white: #fff;\n$grey: #333;\n$blue: #3366cc;\n$titleColor: #4a4a4a;\n\n$outline: #979797;\n$headbg: #f7f7f7;\n$darkgrey: #d5d5d5;\n$contentbg: #f4f4f4;\n\n$gutter: 20px;\n$mobilegutter: 10px;\n","// CSS 3 mixins\n\n// This file includes mixins for CSS properties that require vendor prefixes.\n\n// Please add more mixins here as you need them, rather than adding them to\n// your application - this lets us manage them in one place.\n\n// You can use the @warn directive to deprecate a mixin where the property\n// no longer needs prefixes.\n\n@mixin border-radius($radius) {\n  -webkit-border-radius: $radius; // Chrome 4.0, Safari 3.1 to 4.0, Mobile Safari 3.2, Android Browser 2.1\n     -moz-border-radius: $radius; // Firefox 2.0 to 3.6\n          border-radius: $radius;\n}\n\n@mixin box-shadow($shadow) {\n  -webkit-box-shadow: $shadow; // Chrome 4.0 to 9.0, Safari 3.1 to 5.0, Mobile Safari 3.2 to 4.3, Android Browser 2.1 to 3.0\n     -moz-box-shadow: $shadow; // Firefox 3.5 to 3.6\n          box-shadow: $shadow;\n}\n\n@mixin scale($x, $y) {\n  // $x and $y should be numeric values without units\n  -webkit-transform: scale($x, $y); // Still in use now, started at: Chrome 4.0, Safari 3.1, Mobile Safari 3.2, Android 2.1\n     -moz-transform: scale($x, $y); // Firefox 3.5 to 15.0\n      -ms-transform: scale($x, $y); // IE9 only\n       -o-transform: scale($x, $y); // Opera 10.5 to 12.0\n          transform: scale($x, $y);\n}\n\n@mixin translate($x, $y) {\n  -webkit-transform: translate($x, $y); // Still in use now, started at: Chrome 4.0, Safari 3.1, Mobile Safari 3.2, Android 2.1\n     -moz-transform: translate($x, $y); // Firefox 3.5 to 15.0\n      -ms-transform: translate($x, $y); // IE9 only\n       -o-transform: translate($x, $y); // Opera 10.5 to 12.0\n          transform: translate($x, $y);\n}\n\n@mixin gradient($from, $to) {\n  // Creates a vertical gradient where $from is the colour at the top of the element\n  // and $to is the colour at the bottom. The top colour is used as a background-color\n  // for browsers that don't support gradients.\n  background-color: $from;\n  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to)); // Safari 4.0 to 5.1, Chrome 1.0 to 10.0, old deprecated syntax\n  background-image: -webkit-linear-gradient($from, $to); // Chrome 10.0 to 25.0, Safari 5.1 to 6.0, Mobile Safari 5.0 to 6.1, Android Browser 4.0 to 4.3\n  background-image:    -moz-linear-gradient($from, $to); // Firefox 3.6 to 15.0\n  background-image:      -o-linear-gradient($from, $to); // Opera 11.1 to 12.0\n  background-image:         linear-gradient($from, $to);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$from}', endColorstr='#{$to}',GradientType=0 ); // IE6 to IE9\n}\n\n@mixin transition($property, $duration, $function, $delay: 0s) {\n  -webkit-transition: ($property $duration $function $delay); // Chrome 4.0 to 25.0, Safari 3.1 to 6.0, Mobile Safari 3.2 to 6.1, Android Browser 2.1 to 4.3\n     -moz-transition: ($property $duration $function $delay); // Firefox 4.0 to 15.0\n       -o-transition: ($property $duration $function $delay); // Opera 10.5 to 12.0\n          transition: ($property $duration $function $delay);\n}\n\n@mixin box-sizing($type) {\n  // http://www.w3.org/TR/css3-ui/#box-sizing\n  // $type can be one of: content-box | padding-box | border-box | inherit\n  -webkit-box-sizing: $type; // Chrome 4.0 to 9.0, Safari 3.1 to 5.0, Mobile Safari 3.2 to 4.3, Android Browser 2.1 to 3.0\n     -moz-box-sizing: $type; // Firefox 2.0 to 28.0, Firefox for Android 26.0 onwards\n          box-sizing: $type;\n}\n\n@mixin appearance($appearance) {\n  -webkit-appearance: $appearance;\n     -moz-appearance: $appearance;\n}\n\n@mixin calc($property, $calc) {\n  #{$property}: -webkit-calc(#{$calc}); // Chrome 19.0 to 25.0, Safari 6.0, Mobile Safari 6.0 to 6.1\n  #{$property}:         calc(#{$calc});\n}\n\n@mixin opacity($trans) {\n  zoom: 1;\n  filter: unquote('alpha(opacity=' + ($trans * 100) + ')'); // IE6 to IE8\n  opacity: $trans;\n}\n","@import \"vars\";\n\nheader {\n  border-bottom: 1px solid $darkgrey;\n  background: $headbg;\n\n  > .container {\n    padding-bottom: $gutter;\n  }\n\n  .site-title {\n    @include title-big;\n    color: $grey;\n    margin: $gutter 0;\n    a {\n      color: $grey;\n      text-decoration: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n\n  .site-subtitle {\n    @include title-small;\n    font-style: italic;\n    color: $grey;\n    margin-top: 0 0 $gutter;\n  }\n\n  .contact-details {\n    @include title-small;\n    font-size: 21px;\n    margin-top: $gutter * 1.25;\n    margin-bottom: $gutter;\n    line-height: 1.5;\n\n    @include media(tablet) {\n      text-align: right;\n      margin-bottom: 0;\n    }\n\n    .online a {\n      display: inline;\n    }\n\n    .online .divider {\n      margin: 0 5px\n    }\n\n    a, .tel {\n      clear: both;\n      display: block;\n    }\n\n    .tel {\n      margin: 0;\n    }\n  }\n}\n","@import \"vars\";\n\n.meta {\n  .title {\n    color: $titleColor;\n    font-weight: 400;\n\n    &:first-child {\n      margin-top: $gutter;\n    }\n\n  }\n  .data {\n    margin-bottom: $gutter * 2;\n  }\n}\n","@import \"vars\";\n\nbody {\n  margin: 0;\n  background: $contentbg;\n  @include box-sizing(border-box);\n\n  a {\n    text-decoration: underline;\n  }\n}\n\n#main {\n  margin-top: $gutter;\n  @include text-medium;\n  p {\n    margin-bottom: $gutter;\n  }\n  .container {\n    width: 1170px;\n  }\n}\n\n.intro {\n  @include media(tablet) {\n    margin: $gutter/2 0 $gutter * 3 0;\n  }\n\n  max-width: 790px;\n}\n\n.back-link {\n  display: inline-block;\n  margin-bottom: $gutter;\n  padding-left: $gutter;\n  position: relative;\n\n  &:before {\n    content: '<';\n    left: 0;\n    position: absolute;\n  }\n}\n\n.step {\n  margin-top: 40px;\n}\n","// Cross-browser shims\n// Ways of normalising properties across browsers.\n\n@import \"_conditionals\";\n\n// From: https://blog.mozilla.org/webdev/2009/02/20/cross-browser-inline-block/\n\n// Usage:\n//\n// @include inline-block\n// or\n// @include inline-block(\"250px\")\n//\n// which gives a min-height to the inline-block elements.\n\n\n@mixin inline-block($min-height: \"\") {\n  display: -moz-inline-stack;\n  display: inline-block;\n\n  @if $min-height != \"\" {\n    min-height: $min-height;\n  }\n\n  @include ie-lte(7) {\n    zoom: 1;\n    display: inline;\n  }\n\n  @include ie(6) {\n    @if $min-height != \"\" {\n      height: $min-height;\n    }\n  }\n}\n\n\n// Contain floats usage:\n//\n// .this-has-floated-children {\n//  @extend %contain-floats;\n// }\n\n\n%contain-floats {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n    border-spacing: 0;\n  }\n  @include ie-lte(7) {\n    zoom: 1;\n  }\n}\n","@import \"vars\";\n@import \"fonts\";\n\n.thumbnail {\n  box-sizing: border-box;\n  width: 100%;\n  background: $outline;\n  padding: 2px;\n  border-radius: 0;\n  border: 0;\n\n  .caption {\n      color: $white;\n\n      p {\n        margin: 0;\n        padding: 0;\n      }\n\n      .project {\n        @include text-medium;\n      }\n\n      .position {\n        @include text-small;\n      }\n\n      a {\n        color: $white;\n        text-decoration: none;\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n  }\n}\n"]}